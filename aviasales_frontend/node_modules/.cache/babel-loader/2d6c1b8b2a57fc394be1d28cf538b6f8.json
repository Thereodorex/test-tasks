{"ast":null,"code":"import { all, call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\n\nfunction* updateApi() {\n  // while (true) {\n  try {\n    const data = yield call(() => {\n      return;\n      fetch('https://front-test.beta.aviasales.ru/search').then(responce => responce.json()).then(fetch('https://front-test.beta.aviasales.ru/tickets?searchId=5bsts').then(res => res.json()));\n    });\n    return data;\n  } catch (error) {\n    yield delay(2000);\n  } // }\n\n}\n\nfunction* updateResource() {\n  // do {\n  var apiResponse = yield call(updateApi);\n  yield put({\n    type: 'JOIN',\n    payload: apiResponse.tickets\n  }); // } while (!apiResponse.stop);\n}\n\nexport function* watchUpdateResource() {\n  yield takeLatest('UPDATE_START', updateResource);\n}\nexport function* rootSaga() {\n  yield all([updateResource()]);\n}","map":{"version":3,"sources":["/Users/u18193107/Desktop/test-tasks/aviasales_frontend/src/rootSaga.js"],"names":["all","call","put","takeEvery","takeLatest","delay","updateApi","data","fetch","then","responce","json","res","error","updateResource","apiResponse","type","payload","tickets","watchUpdateResource","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,KAAhD,QAA6D,oBAA7D;;AAEA,UAAUC,SAAV,GAAsB;AACpB;AACE,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMN,IAAI,CAAC,MAAM;AAC5B;AACEO,MAAAA,KAAK,CAAC,6CAAD,CAAL,CAAqDC,IAArD,CAA0DC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtE,EAAuFF,IAAvF,CACAD,KAAK,CAAC,6DAAD,CAAL,CAAqEC,IAArE,CAA0EG,GAAG,IAAIA,GAAG,CAACD,IAAJ,EAAjF,CADA;AAED,KAJoB,CAAvB;AAMA,WAAOJ,IAAP;AACD,GARD,CAQE,OAAMM,KAAN,EAAa;AACb,UAAMR,KAAK,CAAC,IAAD,CAAX;AACD,GAZiB,CAapB;;AACD;;AAED,UAAUS,cAAV,GAA2B;AACzB;AACE,MAAIC,WAAW,GAAG,MAAMd,IAAI,CAACK,SAAD,CAA5B;AACA,QAAMJ,GAAG,CAAC;AACRc,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,OAAO,EAAEF,WAAW,CAACG;AAFb,GAAD,CAAT,CAHuB,CAOzB;AACD;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMf,UAAU,CAAC,cAAD,EAAiBU,cAAjB,CAAhB;AACD;AAGD,OAAO,UAAUM,QAAV,GAAqB;AAC1B,QAAMpB,GAAG,CAAC,CACRc,cAAc,EADN,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\n\nfunction* updateApi() {\n  // while (true) {\n    try {\n      const data = yield call(() => {\n        return \n          fetch('https://front-test.beta.aviasales.ru/search').then(responce => responce.json()).then(  \n          fetch('https://front-test.beta.aviasales.ru/tickets?searchId=5bsts').then(res => res.json()))\n        }\n      );\n      return data;\n    } catch(error) {\n      yield delay(2000);\n    }\n  // }\n}\n\nfunction* updateResource() {\n  // do {\n    var apiResponse = yield call(updateApi);\n    yield put({\n      type: 'JOIN',\n      payload: apiResponse.tickets,\n    });\n  // } while (!apiResponse.stop);\n}\n\nexport function* watchUpdateResource() {\n  yield takeLatest('UPDATE_START', updateResource);\n}\n\n\nexport function* rootSaga() {\n  yield all([\n    updateResource()\n  ])\n}"]},"metadata":{},"sourceType":"module"}