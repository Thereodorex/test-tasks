{"ast":null,"code":"// import React from 'react';\n// import {\n//   all, call, fork, put,\n// } from 'redux-saga/effects';\n// import createSagaMiddleware from 'redux-saga'\n// function* watchPollingTickets() {\n//   while(true) {\n//       const action = yield take('START_POLLING');\n//       yield race([\n//           call(poll, action),\n//           take('STOP_POLLING')\n//       ]);\n//   }\n// }\nimport { put, takeEvery } from 'redux-saga/effects'; // const fetchData = () => {\n//   var x = new XMLHttpRequest();\n// x.open(\"GET\", \"/echo/json/\", true);\n// x.onload = function (){\n//     alert( x.responseText);\n// }\n// x.send(null);\n// }\n\nexport function* helloSaga() {\n  console.log('Hello Sagas!');\n  let x = new XMLHttpRequest();\n\n  const get = () => {\n    x.open(\"GET\", \"https://front-test.beta.aviasales.r\", true);\n\n    x.onload = () => {\n      alert(x.responseText);\n    };\n\n    x.send(null);\n  }; // while (true) {\n\n\n  yield call(get); // }\n}","map":{"version":3,"sources":["/Users/u18193107/Desktop/test-tasks/aviasales_frontend/src/rootSaga.js"],"names":["put","takeEvery","helloSaga","console","log","x","XMLHttpRequest","get","open","onload","alert","responseText","send","call"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,UAAUC,SAAV,GAAsB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,MAAIC,CAAC,GAAG,IAAIC,cAAJ,EAAR;;AAEA,QAAMC,GAAG,GAAG,MAAM;AAChBF,IAAAA,CAAC,CAACG,IAAF,CAAO,KAAP,EAAc,qCAAd,EAAqD,IAArD;;AACAH,IAAAA,CAAC,CAACI,MAAF,GAAW,MAAM;AACfC,MAAAA,KAAK,CAACL,CAAC,CAACM,YAAH,CAAL;AACD,KAFD;;AAGAN,IAAAA,CAAC,CAACO,IAAF,CAAO,IAAP;AACD,GAND,CAL2B,CAa3B;;;AACA,QAAMC,IAAI,CAACN,GAAD,CAAV,CAd2B,CAe3B;AACD","sourcesContent":["// import React from 'react';\n// import {\n//   all, call, fork, put,\n// } from 'redux-saga/effects';\n\n// import createSagaMiddleware from 'redux-saga'\n\n// function* watchPollingTickets() {\n//   while(true) {\n//       const action = yield take('START_POLLING');\n//       yield race([\n//           call(poll, action),\n//           take('STOP_POLLING')\n//       ]);\n//   }\n// }\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\n// const fetchData = () => {\n//   var x = new XMLHttpRequest();\n// x.open(\"GET\", \"/echo/json/\", true);\n// x.onload = function (){\n//     alert( x.responseText);\n// }\n// x.send(null);\n// }\n\nexport function* helloSaga() {\n  console.log('Hello Sagas!');\n\n  let x = new XMLHttpRequest();\n\n  const get = () => {\n    x.open(\"GET\", \"https://front-test.beta.aviasales.r\", true);\n    x.onload = () => {\n      alert(x.responseText);\n    }\n    x.send(null);\n  }\n\n  // while (true) {\n  yield call(get);\n  // }\n}"]},"metadata":{},"sourceType":"module"}