{"ast":null,"code":"import { all, call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\nimport { join } from './actions/tickets';\n\nfunction* updateApi() {\n  // while (true) {\n  try {\n    const _ref = yield call(() => {\n      return fetch('https://front-test.beta.aviasales.ru/search').then(res => res.json());\n    }),\n          searchId = _ref.searchId;\n\n    console.log(searchId);\n    const data = yield call(() => {\n      return fetch(`https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`).then(res => res.json());\n    });\n    return data;\n  } catch (error) {\n    yield delay(2000);\n  } // }\n\n}\n\nfunction* updateResource() {\n  // do {\n  var apiResponse = yield call(updateApi);\n  console.log(apiResponse.tickets);\n  yield put({\n    type: 'JOIN',\n    payload: apiResponse.tickets\n  }); // } while (!apiResponse.stop);\n}\n\nexport function* watchUpdateResource() {\n  yield takeLatest('UPDATE_START', updateResource);\n}\nexport function* rootSaga() {\n  yield all([updateResource()]);\n}","map":{"version":3,"sources":["/Users/u18193107/Desktop/test-tasks/aviasales_frontend/src/rootSaga.js"],"names":["all","call","put","takeEvery","takeLatest","delay","join","updateApi","fetch","then","res","json","searchId","console","log","data","error","updateResource","apiResponse","tickets","type","payload","watchUpdateResource","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,KAAhD,QAA6D,oBAA7D;AAEA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,UAAUC,SAAV,GAAsB;AACpB;AACE,MAAI;AAAA,iBACmB,MAAMN,IAAI,CAAC,MAAM;AACpC,aAAOO,KAAK,CAAC,6CAAD,CAAL,CAAqDC,IAArD,CAA0DC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjE,CAAP;AACD,KAF8B,CAD7B;AAAA,UACMC,QADN,QACMA,QADN;;AAIFC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMG,IAAI,GAAG,MAAMd,IAAI,CAAC,MAAM;AAC5B,aAAOO,KAAK,CAAE,yDAAwDI,QAAS,EAAnE,CAAL,CAA2EH,IAA3E,CAAgFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvF,CAAP;AACC,KAFoB,CAAvB;AAIA,WAAOI,IAAP;AACD,GAVD,CAUE,OAAMC,KAAN,EAAa;AACb,UAAMX,KAAK,CAAC,IAAD,CAAX;AACD,GAdiB,CAepB;;AACD;;AAED,UAAUY,cAAV,GAA2B;AACzB;AACE,MAAIC,WAAW,GAAG,MAAMjB,IAAI,CAACM,SAAD,CAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYI,WAAW,CAACC,OAAxB;AACA,QAAMjB,GAAG,CAAC;AACRkB,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,OAAO,EAAEH,WAAW,CAACC;AAFb,GAAD,CAAT,CAJuB,CAQzB;AACD;;AAED,OAAO,UAAUG,mBAAV,GAAgC;AACrC,QAAMlB,UAAU,CAAC,cAAD,EAAiBa,cAAjB,CAAhB;AACD;AAGD,OAAO,UAAUM,QAAV,GAAqB;AAC1B,QAAMvB,GAAG,CAAC,CACRiB,cAAc,EADN,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\n\nimport { join } from './actions/tickets';\n\nfunction* updateApi() {\n  // while (true) {\n    try {\n      const { searchId } = yield call(() => {\n        return fetch('https://front-test.beta.aviasales.ru/search').then(res => res.json())\n      })\n      console.log(searchId);\n      const data = yield call(() => {\n        return fetch(`https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`).then(res => res.json())\n        }\n      );\n      return data;\n    } catch(error) {\n      yield delay(2000);\n    }\n  // }\n}\n\nfunction* updateResource() {\n  // do {\n    var apiResponse = yield call(updateApi);\n    console.log(apiResponse.tickets);\n    yield put({\n      type: 'JOIN',\n      payload: apiResponse.tickets,\n    });\n  // } while (!apiResponse.stop);\n}\n\nexport function* watchUpdateResource() {\n  yield takeLatest('UPDATE_START', updateResource);\n}\n\n\nexport function* rootSaga() {\n  yield all([\n    updateResource()\n  ])\n}"]},"metadata":{},"sourceType":"module"}