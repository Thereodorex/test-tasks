{"ast":null,"code":"import { all, call, put, takeEvery } from 'redux-saga/effects';\nexport function* helloSaga() {\n  console.log('Hello Sagas!');\n  let x = new XMLHttpRequest();\n\n  const get = () => {\n    x.open(\"GET\", \"https://front-test.beta.aviasales.ru/search\", true);\n\n    x.onload = () => {\n      alert(x.responseText);\n    };\n\n    x.send(null);\n  };\n\n  yield call(get);\n  yield put({\n    type: 'DATA'\n  });\n}\nexport function* watchSaga() {\n  yield takeEvery('DATA_FETCHED', helloSaga);\n}\nexport function* rootSaga() {\n  yield all([helloSaga(), watchSaga()]);\n}","map":{"version":3,"sources":["/Users/u18193107/Desktop/test-tasks/aviasales_frontend/src/rootSaga.js"],"names":["all","call","put","takeEvery","helloSaga","console","log","x","XMLHttpRequest","get","open","onload","alert","responseText","send","type","watchSaga","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,OAAO,UAAUC,SAAV,GAAsB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,MAAIC,CAAC,GAAG,IAAIC,cAAJ,EAAR;;AAEA,QAAMC,GAAG,GAAG,MAAM;AAChBF,IAAAA,CAAC,CAACG,IAAF,CAAO,KAAP,EAAc,6CAAd,EAA6D,IAA7D;;AACAH,IAAAA,CAAC,CAACI,MAAF,GAAW,MAAM;AACfC,MAAAA,KAAK,CAACL,CAAC,CAACM,YAAH,CAAL;AACD,KAFD;;AAGAN,IAAAA,CAAC,CAACO,IAAF,CAAO,IAAP;AACD,GAND;;AAQA,QAAMb,IAAI,CAACQ,GAAD,CAAV;AACA,QAAMP,GAAG,CAAC;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAT;AACD;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMb,SAAS,CAAC,cAAD,EAAiBC,SAAjB,CAAf;AACD;AAED,OAAO,UAAUa,QAAV,GAAqB;AAC1B,QAAMjB,GAAG,CAAC,CACRI,SAAS,EADD,EAERY,SAAS,EAFD,CAAD,CAAT;AAID","sourcesContent":["import { all, call, put, takeEvery } from 'redux-saga/effects';\n\nexport function* helloSaga() {\n  console.log('Hello Sagas!');\n\n  let x = new XMLHttpRequest();\n\n  const get = () => {\n    x.open(\"GET\", \"https://front-test.beta.aviasales.ru/search\", true);\n    x.onload = () => {\n      alert(x.responseText);\n    }\n    x.send(null);\n  }\n\n  yield call(get);\n  yield put({ type: 'DATA' });\n}\n\nexport function* watchSaga() {\n  yield takeEvery('DATA_FETCHED', helloSaga)\n}\n\nexport function* rootSaga() {\n  yield all([\n    helloSaga(),\n    watchSaga()\n  ])\n}"]},"metadata":{},"sourceType":"module"}