{"ast":null,"code":"// import React from 'react';\n// import {\n//   all, call, fork, put,\n// } from 'redux-saga/effects';\n// import createSagaMiddleware from 'redux-saga'\n// function* watchPollingTickets() {\n//   while(true) {\n//       const action = yield take('START_POLLING');\n//       yield race([\n//           call(poll, action),\n//           take('STOP_POLLING')\n//       ]);\n//   }\n// }\nimport { call, put, takeEvery } from 'redux-saga/effects'; // const fetchData = () => {\n//   var x = new XMLHttpRequest();\n// x.open(\"GET\", \"/echo/json/\", true);\n// x.onload = function (){\n//     alert( x.responseText);\n// }\n// x.send(null);\n// }\n\nexport function* helloSaga() {\n  console.log('Hello Sagas!');\n  let x = new XMLHttpRequest();\n\n  const get = () => {\n    x.open(\"GET\", \"https://front-test.beta.aviasales.ru/search\", true);\n\n    x.onload = () => {\n      alert(x.responseText);\n    };\n\n    x.send(null);\n  };\n\n  while (true) {\n    yield call(get);\n  }\n}\nexport function* watchSaga() {\n  console.log('Hello Sagas!');\n  yield takeEvery('DATA_FETCHED', helloSaga);\n}\nexport default function* rootSaga() {\n  yield all([helloSaga(), watchIncrementAsync()]);\n}","map":{"version":3,"sources":["/Users/u18193107/Desktop/test-tasks/aviasales_frontend/src/rootSaga.js"],"names":["call","put","takeEvery","helloSaga","console","log","x","XMLHttpRequest","get","open","onload","alert","responseText","send","watchSaga","rootSaga","all","watchIncrementAsync"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,UAAUC,SAAV,GAAsB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,MAAIC,CAAC,GAAG,IAAIC,cAAJ,EAAR;;AAEA,QAAMC,GAAG,GAAG,MAAM;AAChBF,IAAAA,CAAC,CAACG,IAAF,CAAO,KAAP,EAAc,6CAAd,EAA6D,IAA7D;;AACAH,IAAAA,CAAC,CAACI,MAAF,GAAW,MAAM;AACfC,MAAAA,KAAK,CAACL,CAAC,CAACM,YAAH,CAAL;AACD,KAFD;;AAGAN,IAAAA,CAAC,CAACO,IAAF,CAAO,IAAP;AACD,GAND;;AAQA,SAAO,IAAP,EAAa;AACb,UAAMb,IAAI,CAACQ,GAAD,CAAV;AACC;AACF;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC3BV,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAMH,SAAS,CAAC,cAAD,EAAiBC,SAAjB,CAAf;AACD;AAED,eAAe,UAAUY,QAAV,GAAqB;AAClC,QAAMC,GAAG,CAAC,CACRb,SAAS,EADD,EAERc,mBAAmB,EAFX,CAAD,CAAT;AAID","sourcesContent":["// import React from 'react';\n// import {\n//   all, call, fork, put,\n// } from 'redux-saga/effects';\n\n// import createSagaMiddleware from 'redux-saga'\n\n// function* watchPollingTickets() {\n//   while(true) {\n//       const action = yield take('START_POLLING');\n//       yield race([\n//           call(poll, action),\n//           take('STOP_POLLING')\n//       ]);\n//   }\n// }\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\n// const fetchData = () => {\n//   var x = new XMLHttpRequest();\n// x.open(\"GET\", \"/echo/json/\", true);\n// x.onload = function (){\n//     alert( x.responseText);\n// }\n// x.send(null);\n// }\n\nexport function* helloSaga() {\n  console.log('Hello Sagas!');\n\n  let x = new XMLHttpRequest();\n\n  const get = () => {\n    x.open(\"GET\", \"https://front-test.beta.aviasales.ru/search\", true);\n    x.onload = () => {\n      alert(x.responseText);\n    }\n    x.send(null);\n  }\n\n  while (true) {\n  yield call(get);\n  }\n}\n\nexport function* watchSaga() {\n  console.log('Hello Sagas!');\n  yield takeEvery('DATA_FETCHED', helloSaga)\n}\n\nexport default function* rootSaga() {\n  yield all([\n    helloSaga(),\n    watchIncrementAsync()\n  ])\n}"]},"metadata":{},"sourceType":"module"}