{"ast":null,"code":"import { all, call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\n\nfunction* updateApi() {\n  while (true) {\n    try {\n      const data = yield call(() => {\n        return fetch('https://front-test.beta.aviasales.ru/tickets?searchId=5bsts').then(res => res.json());\n      });\n      return data;\n    } catch (error) {\n      yield delay(2000);\n    }\n  }\n}\n\nfunction* updateResource() {\n  do {\n    const apiResponse = yield call(updateApi, data);\n    yield put({\n      type: 'JOIN',\n      payload: apiResponse.tickets\n    });\n  } while (api);\n}\n\nexport function* watchUpdateResource() {\n  yield takeLatest('UPDATE_START', updateResource);\n}\nexport function* rootSaga() {\n  yield all([watchUpdateResource()]);\n}","map":{"version":3,"sources":["/Users/u18193107/Desktop/test-tasks/aviasales_frontend/src/rootSaga.js"],"names":["all","call","put","takeEvery","takeLatest","delay","updateApi","data","fetch","then","res","json","error","updateResource","apiResponse","type","payload","tickets","api","watchUpdateResource","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,KAAhD,QAA6D,oBAA7D;;AAEA,UAAUC,SAAV,GAAsB;AACpB,SAAO,IAAP,EAAa;AACX,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMN,IAAI,CAAC,MAAM;AAC5B,eAAOO,KAAK,CAAC,6DAAD,CAAL,CAAqEC,IAArE,CAA0EC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjF,CAAP;AACC,OAFoB,CAAvB;AAIA,aAAOJ,IAAP;AACD,KAND,CAME,OAAMK,KAAN,EAAa;AACb,YAAMP,KAAK,CAAC,IAAD,CAAX;AACD;AACF;AACF;;AAED,UAAUQ,cAAV,GAA2B;AACzB,KAAG;AACD,UAAMC,WAAW,GAAG,MAAMb,IAAI,CAACK,SAAD,EAAYC,IAAZ,CAA9B;AACA,UAAML,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAE,MADE;AAERC,MAAAA,OAAO,EAAEF,WAAW,CAACG;AAFb,KAAD,CAAT;AAID,GAND,QAMSC,GANT;AAOD;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMf,UAAU,CAAC,cAAD,EAAiBS,cAAjB,CAAhB;AACD;AAGD,OAAO,UAAUO,QAAV,GAAqB;AAC1B,QAAMpB,GAAG,CAAC,CACRmB,mBAAmB,EADX,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\n\nfunction* updateApi() {\n  while (true) {\n    try {\n      const data = yield call(() => {\n        return fetch('https://front-test.beta.aviasales.ru/tickets?searchId=5bsts').then(res => res.json())\n        }\n      );\n      return data;\n    } catch(error) {\n      yield delay(2000);\n    }\n  }\n}\n\nfunction* updateResource() {\n  do {\n    const apiResponse = yield call(updateApi, data);\n    yield put({\n      type: 'JOIN',\n      payload: apiResponse.tickets,\n    });\n  } while (api);\n}\n\nexport function* watchUpdateResource() {\n  yield takeLatest('UPDATE_START', updateResource);\n}\n\n\nexport function* rootSaga() {\n  yield all([\n    watchUpdateResource()\n  ])\n}"]},"metadata":{},"sourceType":"module"}